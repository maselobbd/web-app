name: Releases

on:
  workflow_dispatch:
    inputs:
      apiRunId:
        description: 'Enter **API build workflow** run ID'
        required: true
      swaRunId:
        description: 'Enter **SWA build workflow** run ID: '
        required: true


jobs:
  create_api_release:
    runs-on: ubuntu-latest
    name: Download api artifact and deploy to azure
    steps:
      - run: echo "This workflow run ID is $GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY
      - name: Download api artifact
        id: daa
        uses: actions/download-artifact@v4
        with:
          name: artifact-API
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.inputs.apiRunId }}
  
      - name: Create release and upload API release asset
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(date +%y.%m.%d.%H)
          if ! gh release view "Release-$DATE" > /dev/null; then
            gh release create "Release-$DATE" --repo ${{ vars.REPO }}
          fi
          gh release upload "Release-$DATE" artifacts/api_release.zip --repo ${{ vars.REPO }}

  create_swa_release:
    runs-on: ubuntu-latest
    needs: create_api_release
    steps:
      - run: echo "This workflow run ID is $GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY
      - name: Download SWA artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-SWA
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.inputs.swaRunId }}

      - name: Create release and upload SWA release asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(date +%Y.%m.%d.%H)
          if ! gh release view "Release-$DATE" --repo ${{ vars.REPO }} > /dev/null 2>&1; then
            gh release create "Release-$DATE" --repo ${{ vars.REPO }}
          fi
          gh release upload "Release-$DATE" artifacts/swa_release.zip --repo ${{ vars.REPO }}

  create_db_release:
    runs-on: ubuntu-latest
    needs: create_swa_release
    steps:
      - run: echo "This workflow run ID is $GITHUB_RUN_ID" >> $GITHUB_STEP_SUMMARY
      - name: Zip migration scripts
        run: zip db_migrations.zip db/migrations/ -r

      - name: Create release and upload DB release asset
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(date +%y.%m.%d.%H)
          if ! gh release view "Release-$DATE" > /dev/null; then
            gh release create "Release-$DATE" --repo ${{ vars.REPO }}
          fi
          gh release upload "Release-$DATE" db_migrations.zip --repo ${{ vars.REPO }}
